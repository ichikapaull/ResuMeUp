import { NextRequest, NextResponse } from 'next/server'

export async function POST(req: NextRequest) {
  try {
    const { userData } = await req.json()

    if (!process.env.GEMINI_API_KEY) {
      return NextResponse.json(
        { error: 'Gemini API key is not configured' },
        { status: 500 }
      )
    }

    const prompt = `You are a professional resume writer. Based on the following user data, complete any missing or incomplete fields in a professional and relevant way. 
    Focus on enhancing the following sections if they are missing or incomplete:
    - Professional Summary
    - Job Descriptions
    - Skills
    - Achievements
    - Education Details
    
    User Data: ${JSON.stringify(userData)}
    
    Return the completed sections in JSON format. Only include the sections that needed completion.`

    const geminiRes = await fetch(
      `https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${process.env.GEMINI_API_KEY}`,
      {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          contents: [
            {
              parts: [{ text: prompt }]
            }
          ],
          generationConfig: {
            temperature: 0.7,
            topK: 40,
            topP: 0.95,
            maxOutputTokens: 1024,
          }
        })
      }
    )

    if (!geminiRes.ok) {
      const errorData = await geminiRes.json().catch(() => ({}))
      console.error('Gemini API error:', errorData)
      return NextResponse.json(
        { error: 'Gemini API request failed', details: errorData },
        { status: geminiRes.status }
      )
    }

    const geminiData = await geminiRes.json()
    const aiResult = geminiData.candidates?.[0]?.content?.parts?.[0]?.text || ''

    if (!aiResult) {
      return NextResponse.json(
        { error: 'No content generated by AI' },
        { status: 500 }
      )
    }

    // Try to parse the AI response as JSON
    let parsedResult
    try {
      parsedResult = JSON.parse(aiResult)
    } catch (e) {
      console.error('Failed to parse AI response:', e)
      return NextResponse.json(
        { error: 'Failed to parse AI response', details: aiResult },
        { status: 500 }
      )
    }

    return NextResponse.json({ aiResult: parsedResult })
  } catch (error) {
    console.error('AI completion error:', error)
    return NextResponse.json(
      { error: 'Internal server error', details: error instanceof Error ? error.message : 'Unknown error' },
      { status: 500 }
    )
  }
} 